CREATE TABLE "user" (
"id"  SERIAL NOT NULL ,
"role_id" smallint NOT NULL DEFAULT 5 ,
"email" varchar(250) NOT NULL ,
"password" varchar(255) ,
"provider_id" varchar(255) ,
"provider_type" varchar(55) ,
"created_at" timestamp NOT NULL ,
"profile_id" bigint ,
"active_company_id" int ,
"notif_counter" smallint NOT NULL DEFAULT 0 ,
"chat_counter" smallint NOT NULL DEFAULT 0 ,
PRIMARY KEY ("id")
);

CREATE TABLE "role" (
"id"  SERIAL NOT NULL ,
"label" varchar(255) NOT NULL ,
PRIMARY KEY ("id")
);

CREATE TABLE "company" (
"id"  SERIAL NOT NULL ,
"label" varchar(255) NOT NULL ,
"created_by_id" bigint NOT NULL ,
"created_at" timestamp NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "employee_role" (
"id"  SERIAL NOT NULL ,
"label" varchar(255) NOT NULL ,
PRIMARY KEY ("id")
);

CREATE TABLE "employee" (
"id"  SERIAL NOT NULL ,
"user_id" bigint NOT NULL ,
"company_id" int NOT NULL ,
"employee_role_id" smallint NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "profile" (
"id"  SERIAL NOT NULL ,
"firstname" varchar(255) ,
"lastname" varchar(255) ,
"email" varchar(255) ,
"phone_number" varchar(50) ,
PRIMARY KEY ("id")
);

CREATE TABLE "event" (
"id"  SERIAL NOT NULL ,
"label" varchar(500) NOT NULL ,
"desc" varchar(2054) ,
"status_id" smallint NOT NULL ,
"capacity" smallint NOT NULL DEFAULT 1 ,
"created_by_id" bigint ,
"location_id" bigint NOT NULL ,
"start_date" timestamp NOT NULL ,
"end_date" timestamp ,
"category_id" int NOT NULL ,
"type_id" smallint NOT NULL ,
"channel_id" bigint NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "event_category" (
"id"  SERIAL NOT NULL ,
"label" varchar(250) NOT NULL ,
"slug" varchar NOT NULL DEFAULT '255' ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "event_type" (
"id"  SERIAL NOT NULL ,
"label" varchar(250) NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "member" (
"id"  SERIAL ,
"event_id" bigint NOT NULL ,
"user_id" bigint NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "event_status" (
"id"  SERIAL NOT NULL ,
"label" varchar(255) NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "location" (
"id"  SERIAL NOT NULL ,
"google_id" varchar NOT NULL ,
"label" varchar(500) ,
"lat" float NOT NULL ,
"lng" float NOT NULL ,
"created_by_id" bigint NOT NULL ,
PRIMARY KEY ("id")
);

CREATE TABLE "channel" (
"id"  SERIAL NOT NULL ,
PRIMARY KEY ("id")
);

CREATE TABLE "message" (
"id"  SERIAL NOT NULL ,
"channel_id" bigint ,
"user_id" bigint ,
"content" text ,
"created_at" timestamp NOT NULL ,
"is_disabled" bool NOT NULL DEFAULT 'f' ,
PRIMARY KEY ("id")
);

CREATE TABLE "notification" (
"id"  SERIAL NOT NULL ,
"channel_id" bigint NOT NULL ,
"type" varchar(255) NOT NULL DEFAULT 'general' ,
"key" varchar(500) NOT NULL ,
"data" text ,
"created_at" timestamp NOT NULL ,
PRIMARY KEY ("id")
);

ALTER TABLE "user" ADD FOREIGN KEY ("role_id") REFERENCES "role" ("id");
ALTER TABLE "user" ADD FOREIGN KEY ("profile_id") REFERENCES "profile" ("id");
ALTER TABLE "user" ADD FOREIGN KEY ("active_company_id") REFERENCES "company" ("id");
ALTER TABLE "company" ADD FOREIGN KEY ("created_by_id") REFERENCES "user" ("id");
ALTER TABLE "employee" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");
ALTER TABLE "employee" ADD FOREIGN KEY ("company_id") REFERENCES "company" ("id");
ALTER TABLE "employee" ADD FOREIGN KEY ("employee_role_id") REFERENCES "employee_role" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("status_id") REFERENCES "event_status" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("created_by_id") REFERENCES "user" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("location_id") REFERENCES "location" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("category_id") REFERENCES "event_category" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("type_id") REFERENCES "event_type" ("id");
ALTER TABLE "event" ADD FOREIGN KEY ("channel_id") REFERENCES "channel" ("id");
ALTER TABLE "member" ADD FOREIGN KEY ("event_id") REFERENCES "event" ("id");
ALTER TABLE "member" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");
ALTER TABLE "location" ADD FOREIGN KEY ("created_by_id") REFERENCES "user" ("id");
ALTER TABLE "message" ADD FOREIGN KEY ("channel_id") REFERENCES "channel" ("id");
ALTER TABLE "message" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");
ALTER TABLE "notification" ADD FOREIGN KEY ("channel_id") REFERENCES "channel" ("id");